import { type SyntheticEvent, useState } from 'react';

import { Box, MenuItem, Select, Stack, Tab, Tabs, Typography } from '@mui/material';

import { InfoItem } from '@pages/customer/detail/InfoItem';
import { ScheduleCard } from '@pages/customer/detail/ScheduleCard';

interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function CustomTabPanel({ children, value, index, ...props }: TabPanelProps) {
    return (
        <Box role="tabpanel" hidden={value !== index} {...props}>
            {value === index && children}
        </Box>
    );
}

const INFO_ITEMS = [
    { title: 'ÎßàÏßÄÎßâ Ïó∞ÎùΩÏùº', content: '2023.09.03' },
    { title: 'Îã¥ÎãπÏûê', content: 'ÍπÄÏòÅÏóÖ' },
    { title: 'Ïó∞ÎùΩ Î∞©Î≤ï', content: 'Î©îÏÑ∏ÏßÄ' },
    { title: 'ÎÇ¥Ïö©', content: '[Ïù¥Î≤§Ìä∏ ÎãπÏ≤® ÏïàÎÇ¥: Ï∂ïÌïòÎìúÎ¶ΩÎãàÎã§! üéâ]' },
];

// WAPL ÎØ∏ÌåÖ
// ÍπÄÏòÅÏóÖ | 2023-10-04 13:00
// Ìã∞Îß• Í∏ÄÎ°úÎ≤åÏóê Ï†úÏïàÌï† Ìã∞Î≤†Î°ú Ï†úÌíà ÏÜåÍ∞ú PT
const SCHEDULE_ITEMS = [
    {
        header: 'Îã§Í∞ÄÏò§Îäî ÏùºÏ†ï',
        items: [
            {
                title: 'WAPL ÎØ∏ÌåÖ',
                content: 'Ìã∞Îß• Í∏ÄÎ°úÎ≤åÏóê Ï†úÏïàÌï† Ìã∞Î≤†Î°ú Ï†úÌíà ÏÜåÍ∞ú PT',
                date: '2023-10-04 13:00',
                name: 'ÍπÄÏòÅÏóÖ',
            },
        ],
    },
    {
        header: '2023ÎÖÑ 9Ïõî',
        items: [
            {
                title: 'ÌÅ¨Î†àÎîß Î∞úÌñâ',
                content: 'Ïù¥Î≤§Ìä∏ ÎãπÏ≤® ÏïàÎÇ¥ Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ° Î∞è Ìã∞Î≤†Î°ú Î¨¥Î£å Ï≤¥Ìóò ÏïàÎÇ¥ ÌåîÎ°úÏóÖ',
                date: '2023-09-03 15:30',
                name: 'ÍπÄÏòÅÏóÖ',
            },
            {
                title: 'WAPL Talk',
                content: 'Ïù¥Î≤§Ìä∏ ÏïàÎÇ¥ Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ°',
                date: '2023-08-24 11:00',
                name: 'ÍπÄÏòÅÏóÖ',
            },
        ],
    },
];

export const Status = () => {
    const [currentTab, setCurrentTab] = useState(0);

    const handleChange = (_: SyntheticEvent, newValue: number) => {
        setCurrentTab(newValue);
    };

    return (
        <Stack direction="column">
            <Stack direction="row">
                <Typography>Ïû†Ïû¨ Í≥†Í∞ù</Typography>
                <Typography>Ïû†Ïû¨ Í≥†Í∞ù</Typography>
                <Typography>Ïû†Ïû¨ Í≥†Í∞ù</Typography>
            </Stack>
            <Stack direction="row" justifyContent="space-between">
                {INFO_ITEMS.map((item) => (
                    <InfoItem title={item.title} content={item.content} key={item.title} />
                ))}
            </Stack>
            <Tabs value={currentTab} onChange={handleChange}>
                <Tab label="ÌôúÎèô" />
                <Tab label="ÏÑ∏Î∂Ä ÏÇ¨Ìï≠" />
                <Tab label="ÏùºÏ†ï" />
                <Tab label="ÎÖ∏Ìä∏" />
            </Tabs>
            <CustomTabPanel value={currentTab} index={0}>
                <Select value="Ï†ÑÏ≤¥">
                    <MenuItem value="Ï†ÑÏ≤¥">Ï†ÑÏ≤¥</MenuItem>
                </Select>
                {SCHEDULE_ITEMS.map(({ header, items }) => (
                    <Stack direction="column">
                        <Typography>{header}</Typography>
                        {items.map((item) => (
                            <ScheduleCard
                                title={item.title}
                                content={item.content}
                                date={item.date}
                                name={item.name}
                            />
                        ))}
                    </Stack>
                ))}
            </CustomTabPanel>
        </Stack>
    );
};
